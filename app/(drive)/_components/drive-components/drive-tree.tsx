"use client";

import { Separator } from "@/components/ui/separator";
import axios from "@/lib/instance";
import { SessionWithUserType, TreeNodeType } from "@/lib/types";
import { useQuery } from "@tanstack/react-query";
import { useSession } from "next-auth/react";
import Link from "next/link";
import DriveFolderNode from "./drive-folder-node";

const DriveTree = () => {
  const { data } = useSession();
  const session = data as SessionWithUserType;
  const folderState = useQuery({
    queryKey: ["drive-parent-folders"],
    queryFn: () =>
      axios
        .post("/dam/folder-service/list", {
          user_id: session.user?.userId,
        })
        .then((res) => {
          const list: TreeNodeType[] = res.data.map((item: any) => ({
            id: item.id,
            name: item.name,
            type: "FOLDER",
            parentFolderId: null,
            createdAt: item.created_at,
            updatedAt: item.updated_at,
            data: null,
          }));
          return list;
        }),
    enabled: !!session?.user?.userId,
  });

  return (
    <div className="w-full">
      <div className="flex items-center gap-x-2 text-sm font-semibold tracking-tight w-full text-slate-500 hover:text-[var(--brand-color)]">
        <svg
          width="15"
          height="16"
          viewBox="0 0 15 16"
          fill="currentColor"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.54545 8.72727C6.40161 8.72727 6.261 8.76993 6.1414 8.84984C6.0218 8.92975 5.92859 9.04334 5.87354 9.17623C5.8185 9.30912 5.80409 9.45535 5.83216 9.59643C5.86022 9.73751 5.92948 9.86709 6.0312 9.96881C6.13291 10.0705 6.26249 10.1398 6.40357 10.1678C6.54465 10.1959 6.69088 10.1815 6.82377 10.1265C6.95666 10.0714 7.07025 9.9782 7.15016 9.8586C7.23007 9.739 7.27273 9.59839 7.27273 9.45455C7.27273 9.26166 7.1961 9.07668 7.05971 8.94029C6.92332 8.8039 6.73834 8.72727 6.54545 8.72727ZM3.63636 8.72727C3.49252 8.72727 3.35191 8.76993 3.23231 8.84984C3.11271 8.92975 3.0195 9.04334 2.96445 9.17623C2.90941 9.30912 2.895 9.45535 2.92307 9.59643C2.95113 9.73751 3.02039 9.86709 3.1221 9.96881C3.22382 10.0705 3.3534 10.1398 3.49448 10.1678C3.63556 10.1959 3.78179 10.1815 3.91468 10.1265C4.04757 10.0714 4.16116 9.9782 4.24107 9.8586C4.32098 9.739 4.36364 9.59839 4.36364 9.45455C4.36364 9.26166 4.28701 9.07668 4.15062 8.94029C4.01423 8.8039 3.82925 8.72727 3.63636 8.72727ZM14.5455 2.18182C14.5455 1.60316 14.3156 1.04821 13.9064 0.63904C13.4972 0.229869 12.9423 0 12.3636 0H2.18182C1.60316 0 1.04821 0.229869 0.63904 0.63904C0.22987 1.04821 0 1.60316 0 2.18182V5.09091C0.00320772 5.62913 0.205244 6.14717 0.567273 6.54545C0.205244 6.94374 0.00320772 7.46178 0 8V10.9091C0 11.4877 0.22987 12.0427 0.63904 12.4519C1.04821 12.861 1.60316 13.0909 2.18182 13.0909H6.54545V14.5455H0.727273C0.534388 14.5455 0.349403 14.6221 0.213013 14.7585C0.0766231 14.8949 0 15.0798 0 15.2727C0 15.4656 0.0766231 15.6506 0.213013 15.787C0.349403 15.9234 0.534388 16 0.727273 16H13.8182C14.0111 16 14.1961 15.9234 14.3324 15.787C14.4688 15.6506 14.5455 15.4656 14.5455 15.2727C14.5455 15.0798 14.4688 14.8949 14.3324 14.7585C14.1961 14.6221 14.0111 14.5455 13.8182 14.5455H8V13.0909H12.3636C12.9423 13.0909 13.4972 12.861 13.9064 12.4519C14.3156 12.0427 14.5455 11.4877 14.5455 10.9091V8C14.5422 7.46178 14.3402 6.94374 13.9782 6.54545C14.3402 6.14717 14.5422 5.62913 14.5455 5.09091V2.18182ZM13.0909 10.9091C13.0909 11.102 13.0143 11.287 12.8779 11.4234C12.7415 11.5597 12.5565 11.6364 12.3636 11.6364H2.18182C1.98893 11.6364 1.80395 11.5597 1.66756 11.4234C1.53117 11.287 1.45455 11.102 1.45455 10.9091V8C1.45455 7.80712 1.53117 7.62213 1.66756 7.48574C1.80395 7.34935 1.98893 7.27273 2.18182 7.27273H12.3636C12.5565 7.27273 12.7415 7.34935 12.8779 7.48574C13.0143 7.62213 13.0909 7.80712 13.0909 8V10.9091ZM13.0909 5.09091C13.0909 5.28379 13.0143 5.46878 12.8779 5.60517C12.7415 5.74156 12.5565 5.81818 12.3636 5.81818H2.18182C1.98893 5.81818 1.80395 5.74156 1.66756 5.60517C1.53117 5.46878 1.45455 5.28379 1.45455 5.09091V2.18182C1.45455 1.98893 1.53117 1.80395 1.66756 1.66756C1.80395 1.53117 1.98893 1.45455 2.18182 1.45455H12.3636C12.5565 1.45455 12.7415 1.53117 12.8779 1.66756C13.0143 1.80395 13.0909 1.98893 13.0909 2.18182V5.09091ZM6.54545 2.90909C6.40161 2.90909 6.261 2.95174 6.1414 3.03166C6.0218 3.11157 5.92859 3.22516 5.87354 3.35805C5.8185 3.49094 5.80409 3.63717 5.83216 3.77825C5.86022 3.91932 5.92948 4.04891 6.0312 4.15062C6.13291 4.25233 6.26249 4.3216 6.40357 4.34966C6.54465 4.37772 6.69088 4.36332 6.82377 4.30828C6.95666 4.25323 7.07025 4.16001 7.15016 4.04041C7.23007 3.92082 7.27273 3.7802 7.27273 3.63636C7.27273 3.44348 7.1961 3.25849 7.05971 3.1221C6.92332 2.98571 6.73834 2.90909 6.54545 2.90909ZM3.63636 2.90909C3.49252 2.90909 3.35191 2.95174 3.23231 3.03166C3.11271 3.11157 3.0195 3.22516 2.96445 3.35805C2.90941 3.49094 2.895 3.63717 2.92307 3.77825C2.95113 3.91932 3.02039 4.04891 3.1221 4.15062C3.22382 4.25233 3.3534 4.3216 3.49448 4.34966C3.63556 4.37772 3.78179 4.36332 3.91468 4.30828C4.04757 4.25323 4.16116 4.16001 4.24107 4.04041C4.32098 3.92082 4.36364 3.7802 4.36364 3.63636C4.36364 3.44348 4.28701 3.25849 4.15062 3.1221C4.01423 2.98571 3.82925 2.90909 3.63636 2.90909Z"
            fill="currentColor"
          ></path>
        </svg>
        <Link href="/my-drive" className="text-inherit hover:underline">
          My drive
        </Link>
      </div>
      <Separator className="my-2 w-full" />
      <div className="flex flex-col">
        {folderState.data &&
          folderState.data.map((folder) => (
            <DriveFolderNode key={folder.id} {...folder} />
          ))}
      </div>
    </div>
  );
};

export default DriveTree;
